---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: clair-serviceaccount
  namespace: clair-namespace
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - put
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - extensions
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: clair-secret-writer
  namespace: clair-namespace
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: clair-serviceaccount
subjects:
- kind: ServiceAccount
  name: default
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-clair-storage
  namespace: clair-namespace
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: postgres-clair
  name: postgres-clair
  namespace: clair-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-clair
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: postgres-clair
    spec:
      containers:
      - env:
        - name: POSTGRESQL_USER
          value: clair
        - name: POSTGRESQL_DATABASE
          value: clair
        - name: POSTGRESQL_PASSWORD
          value: test123
        - name: POSTGRESQL_ADMIN_PASSWORD
          value: test123
        - name: POSTGRESQL_SHARED_BUFFERS
          value: 256MB
        - name: POSTGRESQL_MAX_CONNECTIONS
          value: "2000"
        image: registry.redhat.io/rhel8/postgresql-13@sha256:eceab3d3b02f7d24054c410054b2f125eb4ec4ac9cca9d3f21702416d55a6c5c
        imagePullPolicy: IfNotPresent
        name: postgres-clair
        runAsUser: 0
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 500m
            memory: 2Gi
        ports:
        - containerPort: 5432
          protocol: TCP
        volumeMounts:
        - mountPath: /var/lib/pgsql/data
          name: postgredb
      volumes:
      - name: postgredb
        persistentVolumeClaim:
          claimName: postgres-clair-storage
      terminationGracePeriodSeconds: 180
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: postgres-clair
  name: postgres-clair
  namespace: clair-namespace
spec:
  ports:
  - name: postgres
    port: 5432
    protocol: TCP
    targetPort: 5432
    nodePort: 30432
  selector:
    app: postgres-clair
  type: NodePort
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: clair-configmap
  namespace: clair-namespace
data:
  config.yaml: |
    introspection_addr: ""
    http_listen_addr: :8080
    log_level: debug-color
    updaters:
      config:
          rhel:
              ignore_unpatched: true
    indexer:
      connstring: host=postgres-clair port=5432 dbname=clair user=clair password=test123 sslmode=disable
      scanlock_retry: 10
      layer_scan_concurrency: 10
      migrations: true
      scanner:
            package: {}
            dist: {}
            repo: {}
      airgap: false
      index_report_request_concurrency: -1
    matcher:
      connstring: host=postgres-clair port=5432 dbname=clair user=clair password=test123 sslmode=disable
      max_conn_pool: 100
      indexer_addr: "http://clair-indexer"
      migrations: true
      period: 6h
      disable_updaters: false
    matchers:
      names: null
    notifier:
      indexer_addr: "http://clair-indexer"
      matcher_addr: "http://clair-matcher"
      connstring: host=postgres-clair port=5432 dbname=clair user=clair password=test123 sslmode=disable
      migrations: true
      delivery_interval: 1m
      poll_interval: 6h
      amqp: null
      stomp: null
    auth:
      psk:
        key: Y2xhaXJzaGFyZWRwYXNzd29yZA==
        iss:
            - quay
            - clairctl
    metrics:
      name: "prometheus"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clair-deployment
  namespace: clair-namespace
spec:
  selector:
    matchLabels:
      app: clair
  replicas: 2
  template:
    metadata:
      labels:
        app: clair
    spec:
      volumes:
        - name: clair-config
          configMap:
            name: clair-configmap
      containers:
        - name: clair
          image: quay.io/projectquay/clair:4.7.1
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 8080
            name: clair-http
            protocol: TCP
          - containerPort: 8089
            name: clair-intro
            protocol: TCP
          startupProbe:
            tcpSocket:
              port: clair-intro
            periodSeconds: 10
            failureThreshold: 300
          readinessProbe:
            tcpSocket:
              port: 8080
          livelinessProbe:
            httpGet:
              port: clair-intro
              path: /healthz
          resources:
            limits:
              cpu: "4"
              memory: 16Gi
            requests:
              cpu: "2"
              memory: 2Gi
          env:
            - name: CLAIR_MODE
              value: combo
            - name: CLAIR_CONF
              value: /clair/config.yaml
          volumeMounts:
            - name: clair-config
              mountPath: /clair/config.yaml
              subPath: config.yaml
              readOnly: true
---
apiVersion: v1
kind: Service
metadata:
  name: clair-service
  namespace: clair-namespace
spec:
  selector:
    app: clair
  ports:
    - name: clair-http
      port: 80
      protocol: TCP
      targetPort: 8080
    - name: clair-introspection
      port: 8089
      protocol: TCP
      targetPort: 8089
  type: ClusterIP
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: clair-route
  namespace: clair-namespace
spec:
  to:
    kind: Service
    name: clair-service
  port:
    targetPort: clair-http
  wildcardPolicy: None
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: clair-service-monitor
  namespace: clair-namespace
  labels:
    app: clair
spec:
  selector:
    matchLabels:
      app: clair
  endpoints:
  - port: clair-introspection
    path: /metrics
    interval: 30s
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: clair-deployment
  namespace: clair-namespace
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: clair-deployment
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 90
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 90